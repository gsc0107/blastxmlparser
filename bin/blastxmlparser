#!/usr/bin/env ruby
#
# BioRuby bio-blastxmlparser Plugin
# Author:: Pjotr Prins
# Copyright:: 2011
# License:: MIT License
#
# Copyright (C) 2010,2011 Pjotr Prins <pjotr.prins@thebird.nl>

rootpath = File.dirname(File.dirname(__FILE__))
$: << File.join(rootpath,'lib')

BLASTXML_VERSION = File.new(File.join(rootpath,'VERSION')).read.chomp

$stderr.print "BioRuby BLAST XML Parser "+BLASTXML_VERSION+" Copyright (C) 2011 Pjotr Prins <pjotr.prins@thebird.nl>\n\n"

USAGE = <<EOM
bioblastxml xmlfilename(s)
EOM

if ARGV.size == 0
  print USAGE
end

require 'bio-blastxmlparser'
require 'optparse'

require 'bio-logger'
Bio::Log::CLI.logger('stderr')
Bio::Log::CLI.trace('info')

opts = OptionParser.new do |o|

  o.on_tail("-h", "--help", "Show help and examples") {
    print(opts)
    print USAGE
    exit()
  }

  o.banner = "Usage: #{File.basename($0)} [options] file(s)"

  o.separator ""
  o.on("--logger filename",String,"Log to file (default stderr)") do | name |
    Bio::Log::CLI.logger(name)
  end
 
  o.on("--trace options",String,"Set log level (default INFO, see bio-logger)") do | s |
    Bio::Log::CLI.trace(s)
  end
  
  o.on("-q", "--quiet", "Run quietly") do |q|
    Bio::Log::CLI.trace('error')
  end
  
  o.on("-v", "--verbose", "Run verbosely") do |v|
    Bio::Log::CLI.trace('info')
  end
  
  o.on("--debug", "Show debug messages") do |v|
    Bio::Log::CLI.trace('debug')
  end

end

begin
  opts.parse!(ARGV)

  Bio::Log::CLI.configure('bio-blastxmlparser')

rescue OptionParser::InvalidOption => e
  options[:invalid_argument] = e.message
end
